{"version":3,"sources":["components/Range.js","components/Counter.js","components/Main.js","helpers/Validation.js","App.js","index.js"],"names":["rangeLimits","handleRangeChange","handleSubmit","id","className","data-testid","type","name","value","lower","onChange","disabled","fieldStatus","errors","upper","buttonMap","useState","counter","setCounter","handleButtonClick","e","step","parseInt","target","getAttribute","_","range","map","el","onClick","key","large","node","style","margin","waves","setRangeLimits","props","tempUpper","tempLower","isNaN","Number","isInteger","Validation","Fragment","textAlign","color","Range","Counter","App","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792fb14e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ rangeLimits, handleRangeChange, handleSubmit }) => {\r\n    return (\r\n        <div id=\"inputs\" className='container'>\r\n            <label>Lower Limit: </label>\r\n            <input\r\n                className='input-fields'\r\n                data-testid=\"limit-input\"\r\n                type=\"text\"\r\n                name=\"lower\"\r\n                value={ rangeLimits.lower }\r\n                onChange={ handleRangeChange }\r\n                disabled = { rangeLimits.fieldStatus.lower }\r\n            />\r\n            {<span className='error'>{ rangeLimits.errors.lower }</span>}<br></br>\r\n            <label>Upper Limit: </label>\r\n            <input\r\n                className='input-fields'\r\n                data-testid=\"limit-input\"\r\n                type=\"text\"\r\n                name=\"upper\"\r\n                value={ rangeLimits.upper }\r\n                onChange={ handleRangeChange }\r\n                disabled = { rangeLimits.fieldStatus.upper }\r\n            />\r\n            {<span className='error'>{ rangeLimits.errors.upper }</span>}<br></br>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { Button } from 'react-materialize';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport default ({ buttonMap, rangeLimits }) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const handleButtonClick = e => {\r\n        let step = parseInt(e.target.getAttribute('step'));\r\n        setCounter(counter + step);\r\n    }\r\n    const handleResetClick = e => setCounter(0);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row counter\">\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(+rangeLimits.lower, +rangeLimits.upper + 1, 1).map(el => <Button className=\"col-5 z-depth-3\" onClick={handleButtonClick} step={el}\r\n                                          name=\"subtract\" key={el}>{el}</Button>)}\r\n                <div className=\"counter-container row\">\r\n                    <h2 className=\"col-2 counter-label\">Counter: {counter}</h2>\r\n                    <Button\r\n                        id=\"reset-button\"\r\n                        large\r\n                        node=\"a\"\r\n                        style={{\r\n                            margin: 5\r\n                        }}\r\n                        waves=\"light\"\r\n                        type=\"submit\"\r\n                        onClick={handleResetClick}\r\n                    >\r\n                        RESET COUNTER\r\n                    </Button>\r\n                </div>\r\n                {rangeLimits.lower && rangeLimits.upper && _.range(+rangeLimits.lower, +rangeLimits.upper + 1, 1).map(el => <Button className=\"col-5 z-depth-3\" onClick={handleButtonClick} step={-el}\r\n                                          name=\"add\" key={el}>{-el}</Button>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Range from './Range';\r\nimport Counter from './Counter';\r\nimport Validation from '../helpers/Validation';\r\n\r\n\r\nexport default ({ name }) => {\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n            lower : 1,\r\n            upper : 1,\r\n            errors: {\r\n                lower: \"\",\r\n                upper: \"\"\r\n            },\r\n            fieldStatus: {\r\n                upper: false,\r\n                lower: false\r\n            }\r\n        });\r\n\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: value });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n        Validation (name, value, fieldStatus, tempUpper, tempLower, errors);\r\n    }\r\n\r\n    const props = {\r\n        rangeLimits: rangeLimits,\r\n        handleRangeChange: handleRangeChange\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <h1 style={{ textAlign: 'center', color: '#26a69a' }}>{ name }</h1>\r\n            <hr></hr>\r\n            <Range {...props}/>\r\n            <Counter {...props}/>\r\n        </React.Fragment>\r\n    )\r\n}","export default (name, value, fieldStatus, tempUpper, tempLower, errors) => {\r\n    switch (name) {\r\n        case 'upper':\r\n            errors.upper =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                    ? 'ERROR! Must be less than 10'\r\n                    : parseInt(value) < tempLower\r\n                        ? 'ERROR! Upper Limit Must be GREATER than Lower Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.lower =\r\n                parseInt(value) < tempLower\r\n                    ? true\r\n                    : false\r\n            ;\r\n\r\n            break;\r\n        case 'lower':\r\n            errors.lower =\r\n                isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                    ? 'ERROR! Must be greater than zero'\r\n                    : parseInt(value) > tempUpper\r\n                        ? 'ERROR! Lower Limit Must be Less than Upper Limit'\r\n                        : ''\r\n            ;\r\n            fieldStatus.upper =\r\n                parseInt(value) > tempUpper\r\n                    ? true\r\n                    : false\r\n            ;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import React from 'react';\nimport Main from './components/Main';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <Main name={\"Calculator\"}/>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}