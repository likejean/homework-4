{"version":3,"sources":["components/Range.js","components/Counter.js","components/Footer.js","components/Main.js","App.js","index.js"],"names":["rangeLimits","handleRangeChange","handleSubmit","id","className","data-testid","type","name","value","lower","onChange","disabled","fieldStatus","errors","upper","large","node","style","margin","waves","onClick","buttonMap","useState","counter","setCounter","handleButtonClick","e","step","parseInt","target","getAttribute","map","el","key","textAlign","fontSize","color","setRangeLimits","setButtonMap","error","setError","props","tempUpper","tempLower","isNaN","Number","isInteger","range","arrRight","arrLeft","i","push","preventDefault","Fragment","Range","Counter","Footer","App","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e0c5255.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-materialize';\r\n\r\nexport default ({ rangeLimits, handleRangeChange, handleSubmit }) => {\r\n    return (\r\n        <div id=\"inputs\" className='container'>\r\n            <label>Lower Limit: </label>\r\n            <input\r\n                className='input-fields'\r\n                data-testid=\"limit-input\"\r\n                type=\"text\"\r\n                name=\"lower\"\r\n                value={ rangeLimits.lower }\r\n                onChange={ handleRangeChange }\r\n                disabled = { rangeLimits.fieldStatus.lower }\r\n            />\r\n            {<span className='error'>{ rangeLimits.errors.lower }</span>}<br></br>\r\n            <label>Upper Limit: </label>\r\n            <input\r\n                className='input-fields'\r\n                data-testid=\"limit-input\"\r\n                type=\"text\"\r\n                name=\"upper\"\r\n                value={ rangeLimits.upper }\r\n                onChange={ handleRangeChange }\r\n                disabled = { rangeLimits.fieldStatus.upper }\r\n            />\r\n            {<span className='error'>{ rangeLimits.errors.upper }</span>}<br></br>\r\n            <Button\r\n                data-testid=\"submit-button\"\r\n                large\r\n                node=\"a\"\r\n                style={{\r\n                    margin: 5\r\n                }}\r\n                waves=\"light\"\r\n                type=\"submit\"\r\n                onClick={ handleSubmit }\r\n            >SUBMIT</Button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { Button } from 'react-materialize';\r\n\r\n\r\nexport default ({ buttonMap }) => {\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const handleButtonClick = e => {\r\n        let step = parseInt(e.target.getAttribute('step'));\r\n        setCounter(counter + step);\r\n    }\r\n    const handleResetClick = e => setCounter(0);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row counter\">\r\n                {buttonMap.lower.map(el => <Button className=\"col-5 z-depth-3\" onClick={handleButtonClick} step={el}\r\n                                          name=\"subtract\" key={el}>{el}</Button>)}\r\n                <div className=\"counter-container row\">\r\n                    <h2 className=\"col-2 counter-label\">Counter: {counter}</h2>\r\n                    <Button\r\n                        id=\"reset-button\"\r\n                        large\r\n                        node=\"a\"\r\n                        style={{\r\n                            margin: 5\r\n                        }}\r\n                        waves=\"light\"\r\n                        type=\"submit\"\r\n                        onClick={handleResetClick}\r\n                    >\r\n                        RESET COUNTER\r\n                    </Button>\r\n                </div>\r\n                {buttonMap.upper.map(el => <Button className=\"col-5 z-depth-3\" onClick={handleButtonClick} step={el}\r\n                                          name=\"add\" key={el}>{el}</Button>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <hr></hr>\r\n            <span style={{ fontSize: 45, color: '#26a69a' }}>Phone Number: 1-800-101-4444</span>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Range from './Range';\r\nimport Counter from './Counter';\r\nimport Footer from './Footer';\r\n\r\nexport default ({ name }) => {\r\n    const [ rangeLimits, setRangeLimits ] = useState({\r\n            lower : 1,\r\n            upper : 1,\r\n            errors: {\r\n                lower: \"\",\r\n                upper: \"\"\r\n            },\r\n            fieldStatus: {\r\n                upper: false,\r\n                lower: false\r\n            }\r\n        });\r\n    const [ buttonMap, setButtonMap ] = useState({lower: [-1], upper: [1]});\r\n    const [ error, setError ] = useState('');\r\n\r\n    const handleRangeChange = e => {\r\n        const { name, value } = e.target;\r\n        let errors = rangeLimits.errors;\r\n        let fieldStatus = rangeLimits.fieldStatus;\r\n        setRangeLimits({ ...rangeLimits, [ name ]: value });\r\n        let tempUpper = rangeLimits[ \"upper\" ];\r\n        let tempLower = rangeLimits[ \"lower\" ];\r\n\r\n        //User Error Validation\r\n\r\n        switch (name) {\r\n            case 'upper':\r\n                errors.upper =\r\n                    isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) >= 10\r\n                        ? 'ERROR! Must be less than 10'\r\n                        : parseInt(value) < tempLower\r\n                            ? 'ERROR! Upper Limit Must be GREATER than Lower Limit'\r\n                            : ''\r\n                ;\r\n                fieldStatus.lower =\r\n                        parseInt(value) < tempLower\r\n                        ? true\r\n                        : false\r\n                ;\r\n\r\n                break;\r\n            case 'lower':\r\n                errors.lower =\r\n                    isNaN(value) || Number.isInteger(value)\r\n                    ? 'ERROR! Input must be an INTEGER'\r\n                    : parseInt(value) < 1\r\n                        ? 'ERROR! Must be greater than zero'\r\n                        : parseInt(value) > tempUpper\r\n                            ? 'ERROR! Lower Limit Must be Less than Upper Limit'\r\n                            : ''\r\n                ;\r\n                fieldStatus.upper =\r\n                    parseInt(value) > tempUpper\r\n                        ? true\r\n                        : false\r\n                ;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        let range = parseInt(rangeLimits.upper) - parseInt(rangeLimits.lower);\r\n        let arrRight = [];\r\n        let arrLeft = [];\r\n        for (let i = parseInt(rangeLimits.lower); i <= parseInt(rangeLimits.lower) + range; i++){\r\n            arrRight.push(i);\r\n            arrLeft.push(-(parseInt(rangeLimits.lower) + parseInt(rangeLimits.lower) + range - i));\r\n        }\r\n        range >= 0 ?\r\n            setButtonMap({lower: arrLeft, upper: arrRight})\r\n            :\r\n            setError('Invalid Inputs! Check if Upper Limit is Greater than Lower Limit');\r\n        e.preventDefault();\r\n    }\r\n    const props = {\r\n        rangeLimits: rangeLimits,\r\n        buttonMap: buttonMap,\r\n        error: error,\r\n        handleRangeChange: handleRangeChange,\r\n        handleSubmit: handleSubmit\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <h1 style={{ textAlign: 'center', color: '#26a69a' }}>{ name }</h1>\r\n            <hr></hr>\r\n            <Range {...props}/>\r\n            <Counter {...props}/>\r\n            <Footer/>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport Main from './components/Main';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <Main name={\"Calculator\"}/>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}